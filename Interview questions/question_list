* = difficulty more * means the harder the question was

Legend:
	- completed
	? needs to be worked on still and understood
	r redo


Programming Questions to go over:

	8/5/2017
		Median of Two Sorted Arrays****
		Contains Duplicate III***
		4Sum ***
		4Sum II *** -actually pretty easy but look over it anyways
		Hamming Distance* << very interesting

Questions: 

	8/5/2017
		-2Sum	*	   
		-3Sum **
		-3Sum Smaller **
		-3Sum Closest **
		-4Sum ***
		-Contains Duplicate I *
		-Contains Duplicate II *
		-Contains Duplicate III ***
		-Median of Two Sorted Arrays ****** -very tricky to do getkth value
		Reflection:
			-all 3 sum algorithm questions require knowledge of how to solve the sorted version of the 2 sum question
			-Contains Duplicate is a set of question that utilizes HashMaps
			-Contains III uses something similar to bucket sort to get O(n) runtime
				-Like bucket sort but uses the parameter "t" to distinguish which bucket they go into
			-4 Sum relies on 3 Sum which relies on 2 Sum

	8/6/2017
		-Longest Substring Without Repeating Characters***
		-Add Two Numbers ** -still need to do the reverse version of this question
		-CTIC question 1.1
		-CTIC question 1.2

	8/7/2017
		-Search Insert Position *
		-Merge Two Binary Trees **

	8/8/2017
		-Reverse LinkedList* 
			-iterative

	8/9/2017
		-Copy Graph with Random pointer***
		-Battleships in a board**
		-Convert Sorted List to Binary Search Tree** -redo later it was fun : D
		-Spiral Matrix ***  lots of weird corner cases  -redo again for practice
		-Excel Sheet Column Number
		-Lowest Common Ancestor of a Binary Search Tree

		--TODO tomorrow Integer to English 

	8/10/2017
		-This day was skipped to handle rats in the apartment :'(
		-Worked on Resume at night instead

	8/11/2017
		-Power***
	
	8/12/2017
		-Find lowest Common Ancestor of a Binary Tree***
		-Find missing value** xor trick
		? Find duplicate value in array***
		? Cycle in LinkedList II Floyd's loop detection algorithm

	8/15/2017
		-Add Two Numbers II*** use stack
		-strstr() **** is actually a lot trickier than you think and is labeled "easy"

	8/16/2017
		- Maximum subarray **
		- Maximum Product subarray **
		? House Robber
		- Two Sum III - Data structure Design ***
		- Two Sum IV - Input is a BST *
		- Sum of Left Leaves **
		- Binary Tree Paths **
		? Path Sum II

	8/17/2017
		r BattleShips in a board **
		- Set Matrix Zeroes ***
		- Number of 1 Bits ** special corner case when the value is negative

	8/18/2017
		- rotate Array***
		- Reversed String II ***
		- starting CTIC questions

	8/19/2017
		- Sum of left leavfes **
		- Validate Binary search tree ***
		- get the leaves of the binary search tree and repeat **
		- Is the linkedList Circular? (with floyd's and set algorithm methods)
		- Intersection of Two Arrays II ** (definition of intersection is tricky it means contained in both sets)
		- Intersection of Two Array I **
		- Add Digits ****(REALLY dumb quesiton with stupid math trick!)
		- Count Primes *** (calcuating primes take n^2 keep track of the prime and nonprime values)
		- Closest Binary search tree value ****
		- Path Sum I *
		- Path Sum II **

	8/20/2017
		- Reverse words in a String****
		- Integer to Egnlish Words****

	8/21/2017
		r Design Tic Tac Toe***** (tricky to get O(1) move time)
		- Binary Tree ZigZag Level order Traversal *** (Kinda cool and fun)
		- Find Peak Element ***
		- Product of Array Except Self ***
		r populating-next right-pointers in each node ******* (Do the second one tomorrow)

	8/22/2017
		- Merge Intervals *** (Greedy problem)
		- Binary Tree Max Sum Path **** (Tricky to understand)
		- Sorting Colors *****
		r Longest increasing subsequence************ (need to do it in nlogn only done it in n^2)
		r Largest BST subTree
		r populating-next right-pointers in each node II******* 

	8/23/2017
		- LRU Cache

	8/24/2017
		- Container with Most Water

	8/25/2017 (DP day)
		- Climbing Stairs ***
		- House Robber ***
		- Best Time to Buy and Sell Stock ***
		- Maximum subarray ***

	8/26/2017
		- Binary Search Tree Iterator ****
		- Binary Tree Inoder Traversal ***
		- Shortest Word Distance **** (IDK why this was hard)
		- Shortest Word Distance II *******
		- Nested List Weight Sum **
		- Nested List Weight Sum II ****

	8/27/2017
		- Permutations II ****
		- 
 

Future Questions/Algorithms to look over:
	-Sliding window technique 
	-Sliding window technique for substrings
	-Dynamic Programming questions
	-Bit Maniuplation questions
	-Trees and Graphs (recursion and stuff)


New Method of Studying:
	If I get stuck for 40minutes skip the problem and go to a different problem instead of looking at the solution

Goals:
	-Do Chapters 1 - 4 for CTIC
	-Do Questions on LeetCode for certain companies


LinkedList Tricks:
	-Runner Technique
		-Middle of List trick
			ListNode start = head;
			ListNode trail = head;
			while (start != null && trail != endNode) {
				start = start.next.next;
				trail = trail.next;
			}
			Since the start is going twice as fast the trail node will be in the center of the LinkedList

